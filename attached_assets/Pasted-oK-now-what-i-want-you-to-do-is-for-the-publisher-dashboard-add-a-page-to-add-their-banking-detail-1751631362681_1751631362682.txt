oK! now what i want you to do is: for the publisher dashboard add a page to add their banking details(India): Account Holder Name, Bank Account Number, IFSC Code, Bank Name, Account Type. Make a small bar at to top like shown until its filled( can be updated through settings, the devteam will can see it of the user. Next thing: When the buyer buys a backlink, after the payment in the order tab it show have options such **add content/Blog(with a max character limit of 2000 char) and a insert link with a upload option**, after uploading it gets updated in the dashboard of the publisher whose link is been bought, and the devteam can see it, then in the order section of the publisher, the publisher have an option to add things like the link of the new blog, and order competed checkbox, and submit it, which ill be shown in the devteam dashboard where the devteam member can like accept the request: if excepted the in the publisher dashboard will show pending money (receive within 24 hours in their bank), if not then in the order section it will show that the order is not fulfilled properly be redo and submit. the devteam will have option to refund the money to the buyer in the buyer order section, then in the order section dashboard of the buyer it will how the order is not fulfilled your money will be refunded within 48 hours. And for now enable fake money. And next feature: | Concept | What It Means |
| ------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Multi-Tenant Architecture | Each user (or company/team) has isolated data, but all users operate on the same app instance. This ensures that one user's data doesn't leak into another's dashboard. |
| Dynamic Dashboard | The dashboard content (charts, stats, orders, reports, etc.) is generated in real-time, based on the logged-in user's ID and roles. |
| Secure Data Isolation | Backend queries are always filtered by user_id, tenant_id, or org_id to ensure no cross-access. |
| Role-Based Access Control (RBAC) | Admins, buyers, sellers, etc. see different views, features, or permissions based on their roles. |
| JWT or Session-Based Auth | Used to securely identify the user and show relevant data on their dashboard. |
| API Access Control | Every API call checks the authenticated user and scopes the data accordingly. |